/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package socialNetwork.view;

import commandsLib.CmdClient;
import commandsLib.CmdData;
import commandsLib.DisconnectClientCmd;
import commandsLib.NameSocketCmd;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import socialNetwork.commands.AddFollower;
import socialNetwork.commands.DislikeMessage;
import socialNetwork.commands.FollowMember;
import socialNetwork.commands.LikeMessage;
import socialNetwork.commands.SocialNetworkCmdsFactory;

/**
 *
 * @author esteban
 */
public class Follower extends javax.swing.JFrame {

    /**
     * Creates new form Follower
     */
    
    private String nameFollower;    
    private CmdClient cmdClient;
    private ArrayList<String> notifications;
    
    public Follower() {
        initComponents();
        getFollowerName();
        defaultValues();
        
    }
    
    private void defaultValues(){
        notifications = new ArrayList();
        followerNameLabel.setText(nameFollower);
        likeButton.setVisible(false);
        disLikeButton.setVisible(false);
        followButton.setVisible(false);
    }
    
    private void getFollowerName(){
        nameFollower = JOptionPane.showInputDialog("Follower name: ");
        if(nameFollower == null ||  nameFollower.length() == 0){
            getFollowerName();
        } else {
            if(nameFollower.contains(",,") || nameFollower.contains("::")){
                JOptionPane.showMessageDialog(this, 
                        "The message cant containt ,, and ::",
                        "Message type error.",JOptionPane.ERROR_MESSAGE);
                getFollowerName();
            } else {
                connectSocket();
            }
        }
    }
    
    private void connectSocket(){
        try{
            this.cmdClient = new CmdClient("localhost", 8080);
            cmdClient.listen(new SocialNetworkCmdsFactory(), this);
            cmdClient.setLogging(true);
            cmdClient.send(new NameSocketCmd(nameFollower));
            CmdData data = new CmdData();
            data.put("nameFollower", nameFollower);
            Thread.sleep(500);
            cmdClient.send(new AddFollower(data));
            this.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent windowEvent) {
                    cmdClient.send(new DisconnectClientCmd());  // call to disconnect socket from the server-side
                    System.exit(0);
                }
            });
        } catch (IOException ex) {
            Logger.getLogger(Member.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(Member.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void updateNotifications(){
        DefaultListModel listModel = new DefaultListModel();
        for(String notification: notifications){
            listModel.addElement(notification);
        }
        notificationsList.setModel(listModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        followerNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        notificationsList = new javax.swing.JList<>();
        notificationSelected = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        disLikeButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        followButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        memberSelected = new javax.swing.JLabel();
        likeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        followerNameLabel.setText("Follower name");

        membersList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        membersList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                membersListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(membersList);

        notificationsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        notificationsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(notificationsList);

        notificationSelected.setText("Notification selected");

        jLabel3.setText("Notification");

        jLabel4.setText("Notification selected:");

        disLikeButton.setText("Dislike");
        disLikeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disLikeButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Members");

        followButton.setText("Follow");
        followButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                followButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Member selected:");

        memberSelected.setText("Member selected");

        likeButton.setText("Like");
        likeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                likeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(followerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(memberSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(notificationSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(followButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(likeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(disLikeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(followerNameLabel)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memberSelected)
                    .addComponent(notificationSelected))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(followButton)
                    .addComponent(likeButton))
                .addGap(6, 6, 6)
                .addComponent(disLikeButton))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void disLikeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disLikeButtonActionPerformed
        CmdData data = new CmdData();
        data.put("follower", nameFollower);
        String[] notification = notificationsList.getSelectedValue().split(":");
        data.put("member", notification[0]);
        data.put("detail", notification[1]);
        cmdClient.send(new DislikeMessage(data));
    }//GEN-LAST:event_disLikeButtonActionPerformed

    private void likeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_likeButtonActionPerformed
        CmdData data = new CmdData();
        data.put("follower", nameFollower);
        String[] notification = notificationsList.getSelectedValue().split(":");
        data.put("member", notification[0]);
        data.put("detail", notification[1]);
        cmdClient.send(new LikeMessage(data));
    }//GEN-LAST:event_likeButtonActionPerformed

    private void membersListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_membersListMouseClicked
        memberSelected.setText(membersList.getSelectedValue());
        followButton.setVisible(true);
    }//GEN-LAST:event_membersListMouseClicked

    private void followButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_followButtonActionPerformed
        CmdData data = new CmdData();
        data.put("follower", nameFollower);
        data.put("member",membersList.getSelectedValue());
        cmdClient.send(new FollowMember(data));
    }//GEN-LAST:event_followButtonActionPerformed

    private void notificationsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationsListMouseClicked
        boolean isMessage = notificationsList.getSelectedValue().contains(":");
        likeButton.setVisible(isMessage);
        disLikeButton.setVisible(isMessage);
        notificationSelected.setText(notificationsList.getSelectedValue());
    }//GEN-LAST:event_notificationsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Follower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Follower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Follower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Follower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Follower().setVisible(true);
            }
        });
    }

    public JList<String> getMembersList() {
        return membersList;
    }

    public ArrayList<String> getNotifications() {
        return notifications;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton disLikeButton;
    private javax.swing.JButton followButton;
    private javax.swing.JLabel followerNameLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton likeButton;
    private javax.swing.JLabel memberSelected;
    private javax.swing.JList<String> membersList;
    private javax.swing.JLabel notificationSelected;
    private javax.swing.JList<String> notificationsList;
    // End of variables declaration//GEN-END:variables
}
